@model BKBlogMVCApp.Models.Blog

@{
    ViewBag.Title = "Edit";
}

<h2>Blog Düzenle</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.Baslik, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Baslik, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Baslik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.Aciklama, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Aciklama, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.Resim, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                <div class="card">
                    <img class="img-responsive" src="~/img/@Model.Resim" style="width:100%;height:100%;" />
                    <div class="card-body">
                        <input type="file" name="file" onchange="previewFile()" onload="loadFile()"><br>
                        <script>
                            function previewFile() {
                                var preview = document.querySelector('img');
                                var file = document.querySelector('input[type=file]').files[0];
                                var reader = new FileReader();

                                reader.addEventListener("load", function () {
                                    preview.src = reader.result;
                                }, false);

                                if (file) {
                                    reader.readAsDataURL(file);
                                }
                            }
                        </script>
                        @Html.ValidationMessageFor(model => model.Resim)
                        @Html.HiddenFor(model => model.Resim)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <strong>@Html.LabelFor(model => model.Icerik, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Icerik, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Icerik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.Onay, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Onay)
                    @Html.ValidationMessageFor(model => model.Onay, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.Anasayfa, new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Anasayfa)
                    @Html.ValidationMessageFor(model => model.Anasayfa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.CategoryId, "Kategori Adı", htmlAttributes: new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, "Kategori Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Güncelle" class="btn btn-success" />
                @Html.ActionLink("Blog Listesi", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
